version: '3.8'
services:

  api-gateway:
    build: api-gateway
    hostname: api-gateway
    container_name: api-gateway
    platform: linux/amd64
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - team-service
      - sponsor-service
      - facility-service
      - competition-service

  competition-service:
    build: competition-service
    container_name: competition-service
    hostname: competition-service
    platform: linux/amd64
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - team-service
      - sponsor-service
      - facility-service
      - mongodb

  team-service:
    build: team-service
    container_name: team-service
    hostname: team-service
    platform: linux/amd64
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy

  sponsor-service:
    build: sponsor-service
    hostname: sponsor-service
    container_name: sponsor-service
    platform: linux/amd64
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres1:
        condition: service_healthy

  facility-service:
    build: facility-service
    container_name: facility-service
    hostname: facility-service
    platform: linux/amd64
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql3:
        condition: service_healthy

  mysql1:
    image: mysql:5.7
    hostname: mysql1
    container_name: mysql1
    platform: linux/amd64
    ports:
      - "3310:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=team-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql1
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin1:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin1
    hostname: phpmyadmin1
    platform: linux/amd64
    links:
      - mysql1
    restart: always
    ports:
      - "5070:80"
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=rootpwd

  postgres1:
    image: postgres:latest
    hostname: postgres1
    container_name: postgres1
    platform: linux/amd64
    environment:
      - POSTGRES_USER=user
      - PGUSER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=sponsor-db
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin1:
    image: dpage/pgadmin4:latest
    container_name: pgadmin1-sponsor
    restart: always
    platform: linux/amd64
    ports:
      - "9000:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@amine.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres1

  mysql3:
    image: mysql:5.7
    hostname: mysql3
    container_name: mysql3
    platform: linux/amd64
    ports:
      - "3311:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=facility-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql3:/var/lib/mysql3
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin2:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    hostname: phpmyadmin2
    platform: linux/amd64
    links:
      - mysql3
    restart: always
    ports:
      - "5072:80"
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=rootpwd

  mongodb:
    image: mongo
    container_name: mongo_db
    platform: linux/arm64 # Change this line for ARM compatibility
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pwd

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    platform: linux/arm64
    ports:
      - "8085:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pwd
      - ME_CONFIG_MONGODB_SERVER=mongodb

volumes:
  mongo: {}
